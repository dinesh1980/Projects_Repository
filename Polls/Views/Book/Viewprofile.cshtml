@model Polls.Models.ViewPublicProfileResponse
@{
    ViewBag.Title = "View Profile";
}

<style>
    section.section-list {
        padding-bottom: 2rem;
    }

    header, section.section-list {
        background-color: #f0f0f0;
    }

        header + section > .container {
            padding-top: 1rem;
        }

    .card-block, .hero-box {
        padding: 1.25rem;
    }

    .card, .hero-box {
        position: relative;
        display: block;
        margin-bottom: .75rem;
        background-color: #fff;
        border: 1px solid #e5e5e5;
        border-radius: .15rem;
    }

    .card-title {
        margin-bottom: .75rem;
    }

    h1 {
        font-size: 2.5rem;
    }

    .form-group {
        /* margin-right: 42px; */
        margin-left: 5px !important;
    }

    .field-validation-error {
        color: red;
    }

    .input-group-addon, .input-group-btn {
        width: 0%;
    }
</style>

<script type="text/javascript">
    $(function () {
        var bindDatePicker = function () {
            $(".date").datetimepicker({
                format: 'YYYY-MM-DD',
                icons: {
                    time: "fa fa-clock-o",
                    date: "fa fa-calendar",
                    up: "fa fa-arrow-up",
                    down: "fa fa-arrow-down"
                }
            }).find('input:first').on("blur", function () {
                // check if the date is correct. We can accept dd-mm-yyyy and yyyy-mm-dd.
                // update the format if it's yyyy-mm-dd
                var date = parseDate($(this).val());

                if (!isValidDate(date)) {
                    //create date based on momentjs (we have that)
                    date = moment().format('YYYY-MM-DD');
                }

                $(this).val(date);
            });
        }

        var isValidDate = function (value, format) {
            format = format || false;
            // lets parse the date to the best of our knowledge
            if (format) {
                value = parseDate(value);
            }

            var timestamp = Date.parse(value);

            return isNaN(timestamp) == false;
        }

        var parseDate = function (value) {
            var m = value.match(/^(\d{1,2})(\/|-)?(\d{1,2})(\/|-)?(\d{4})$/);
            if (m)
                value = m[5] + '-' + ("00" + m[3]).slice(-2) + '-' + ("00" + m[1]).slice(-2);

            return value;
        }

        bindDatePicker();
    });

    $('#myModal').on('shown.bs.modal', function () {
        $(this).find('.modal-dialog').css({
            width: 'auto',
            height: 'auto',
            'max-height': '100%'
        });
    });
</script>
<section class="normal section-list">
    <br />
    <section id="public-display-hero" class="hero">
        <div class="container">
            <ul class="breadcrumb"><li><a href="/Home/Index">Home</a></li><li><a href="#">Profile</a></li></ul>		<div class="row">

            </div>
        </div>
    </section>
    <div class="container">

        <div class="row narrow-wrapper">
            <div class="col-sm-8 col-sm-offset-2">

                <section class="card card-block">
                    <h1 class="card-title">View Profile</h1><br />
                    @using (@Html.BeginForm("ViewProfile", "Profile", FormMethod.Post, new { @class = "form-horizontal" }))
                    {
                        <div style="margin:0;padding:0;display:inline"></div>
                        <div class="form-group">
                            <div class="col-md-8 inputGroupContainer">
                            </div>
                            <div class="col-md-4 inputGroupContainer">
                                <div class="input-group">
                                    <a href=@Model.pictureUrl.Replace("Thumbnail","Full") data-toggle="modal" data-target="#myModal"><img src=@Model.pictureUrl /> </a>

                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">First Name</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.firstName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.firstName)
                                    @Html.HiddenFor(model => model.countryCode)
                                    @Html.HiddenFor(model => model.userId)
                                    @Html.HiddenFor(model => model.id)
                                    @Html.HiddenFor(model => model.gender)
                                    @Html.HiddenFor(model => model.educationLevel)
                                    @Html.HiddenFor(model => model.jobTitle)
                                    @Html.HiddenFor(model => model.companyName)
                                </div>
                            </div>

                        </div>
                        <div class="form-group">

                            <label class="col-md-4 control-label" for="user_email">Last Name</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.lastName, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.lastName)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="col-md-4 control-label" for="user_email">Job Title</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.jobTitle, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="col-md-4 control-label" for="user_email">Education Level</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.educationLevel, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="col-md-4 control-label" for="user_email">Last Login</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.lastLogin, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="form-group">

                            <label class="col-md-4 control-label" for="user_email">Member Since</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.memberSince, new { @class = "form-control" })
                                </div>
                            </div>
                        </div>

                        @*<div class="form-group">
                                <label class="col-md-4 control-label" for="user_email">Company Name</label>
                                <div class="col-md-8 inputGroupContainer">
                                    <div class="input-group">

                                        @Html.DisplayFor(model => model.companyName, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.companyName)
                                    </div>
                                </div>
                            </div>*@

                        @*<div class="form-group">
                                <label class="col-md-4 control-label" for="user_email">Job Title</label>
                                <div class="col-md-8 inputGroupContainer">
                                    <div class="input-group">

                                        @Html.DisplayFor(model => model.jobTitle, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.jobTitle)
                                    </div>
                                </div>
                            </div>*@
                        @*<div class="form-group">
                                <label class="col-md-4 control-label" for="user_email">Gender</label>
                                <div class="col-md-8 inputGroupContainer">
                                    <div class="input-group">

                                        @Html.DisplayFor(model => model.gender, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.gender)
                                    </div>
                                </div>
                            </div>*@
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">Addresss</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">

                                    @Html.DisplayFor(model => model.addressLine1, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.addressLine1)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">City</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.addressCity, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.addressCity)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">State</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.addressState, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.addressState)
                                </div>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">Country</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.addressCountry, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.addressCountry)
                                </div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">Zip</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.addressZip, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.addressZip)
                                </div>
                            </div>
                        </div>


                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">Birth Date</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class='input-group date' id='datetimepicker111'>
                                    @Html.DisplayFor(model => model.birthDate, new { @class = "form-control" })
                                    @*<span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.birthDate)
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">View Counter</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class='input-group date' id='datetimepicker111'>
                                    @Html.DisplayFor(model => model.viewCounter, new { @class = "form-control" })
                                    @*<span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.birthDate)
                            </div>
                        </div>



                        @*<div class="form-group">
                                <label class="col-md-4 control-label" for="user_email">Education Level</label>
                                <div class="col-md-8 inputGroupContainer">
                                    <div class="input-group">
                                        @Html.DisplayFor(model => model.educationLevel, new { @class = "form-control" })
                                        @Html.ValidationMessageFor(model => model.educationLevel)
                                    </div>
                                </div>
                            </div>*@
                    if (Model.isPhonePublic)
                    {

                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">Phone</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.phoneNumber, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.phoneNumber)
                                </div>
                            </div>
                        </div>
                    }
                    if (Model.isEmailPublic)
                    {
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email">PayPal Email</label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    @Html.DisplayFor(model => model.payPalEmail, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.payPalEmail)
                                </div>
                            </div>
                        </div>
                        }
                        <div class="form-group">
                            <label class="col-md-4 control-label" for="user_email"></label>
                            <div class="col-md-8 inputGroupContainer">
                                <div class="input-group">
                                    <input type="submit" id="btnSubmit" class="btn-primary btn btn-large" value="Update" style="display:none" />
                                </div>
                            </div>
                        </div>


                    }
                </section>

            </div>
        </div>

    </div>
    <!-- Modal -->
    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">View Profile</h4>
                </div>
                <div class="modal-body">
                    <p><img src=@Model.pictureUrl.Replace("Thumbnail", "Full") /></p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </div>

        </div>
    </div>

</section>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
